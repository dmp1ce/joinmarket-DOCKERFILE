diff --git a/scripts/yg-privacyenhanced.py b/scripts/yg-privacyenhanced.py
index de57cc2..344343e 100644
--- a/scripts/yg-privacyenhanced.py
+++ b/scripts/yg-privacyenhanced.py
@@ -1,7 +1,7 @@
 #! /usr/bin/env python
 from future.utils import iteritems
 
-import random
+import random, os
 
 from jmbase import get_log, jmprint
 from jmclient import YieldGeneratorBasic, ygmain, jm_single
@@ -15,15 +15,15 @@ from jmclient import YieldGeneratorBasic, ygmain, jm_single
 """THESE SETTINGS CAN SIMPLY BE EDITED BY HAND IN THIS FILE:
 """
 
-ordertype = 'swreloffer'  # [string, 'swreloffer' or 'swabsoffer'] / which fee type to actually use
-cjfee_a = 500             # [satoshis, any integer] / absolute offer fee you wish to receive for coinjoins (cj)
-cjfee_r = '0.00002'       # [percent, any str between 0-1] / relative offer fee you wish to receive based on a cj's amount
-cjfee_factor = 0.1        # [percent, 0-1] / variance around the average fee. Ex: 200 fee, 0.2 var = fee is btw 160-240
-txfee = 100               # [satoshis, any integer] / the average transaction fee you're adding to coinjoin transactions
-txfee_factor = 0.3        # [percent, 0-1] / variance around the average fee. Ex: 1000 fee, 0.2 var = fee is btw 800-1200
-minsize = 1000000         # [satoshis, any integer] / minimum size of your cj offer. Lower cj amounts will be disregarded
-size_factor = 0.1         # [percent, 0-1] / variance around all offer sizes. Ex: 500k minsize, 0.1 var = 450k-550k
-gaplimit = 6
+ordertype = os.environ.get('JM_ORDERTYPE', 'swreloffer')  # [string, 'swreloffer' or 'swabsoffer'] / which fee type to actually use
+cjfee_a = os.environ.get('JM_CJFEE_A', 500)             # [satoshis, any integer] / absolute offer fee you wish to receive for coinjoins (cj)
+cjfee_r = os.environ.get('JM_CJFEE_R', '0.00002')       # [percent, any str between 0-1] / relative offer fee you wish to receive based on a cj's amount
+cjfee_factor = os.environ.get('JM_CJFEE_FACTOR', 0.1)       # [percent, 0-1] / variance around the average fee. Ex: 200 fee, 0.2 var = fee is btw 160-240
+txfee = os.environ.get('JM_TXFEE', 100)               # [satoshis, any integer] / the average transaction fee you're adding to coinjoin transactions
+txfee_factor = os.environ.get('JM_TXFEE_FACTOR', 0.3)        # [percent, 0-1] / variance around the average fee. Ex: 1000 fee, 0.2 var = fee is btw 800-1200
+minsize = os.environ.get('JM_MINSIZE', 1000000)        # [satoshis, any integer] / minimum size of your cj offer. Lower cj amounts will be disregarded
+size_factor = os.environ.get('JM_SIZE_FACTOR', 0.1)         # [percent, 0-1] / variance around all offer sizes. Ex: 500k minsize, 0.1 var = 450k-550k
+gaplimit = os.environ.get('JM_GAPLIMIT', 6)
 
 # end of settings customization
 
diff --git a/scripts/yield-generator-basic.py b/scripts/yield-generator-basic.py
index 2094674..b8648a7 100644
--- a/scripts/yield-generator-basic.py
+++ b/scripts/yield-generator-basic.py
@@ -1,17 +1,18 @@
 #! /usr/bin/env python
 
+import os
 from jmbase import jmprint
 from jmclient import YieldGeneratorBasic, ygmain
 
 """THESE SETTINGS CAN SIMPLY BE EDITED BY HAND IN THIS FILE:
 """
-txfee = 100
-cjfee_a = 500
-cjfee_r = '0.00002'
-ordertype = 'swreloffer' #'swreloffer' or 'swabsoffer'
+txfee = os.environ.get('JM_TXFEE', 100)
+cjfee_a = os.environ.get('JM_CJFEE_A', 500)
+cjfee_r = os.environ.get('JM_CJFEE_R', '0.00002')
+ordertype = os.environ.get('JM_ORDERTYPE', 'swreloffer') #'swreloffer' or 'swabsoffer'
 nickserv_password = ''
-max_minsize = 100000
-gaplimit = 6
+max_minsize = os.environ.get('JM_MINSIZE', 100000)
+gaplimit = os.environ.get('JM_GAPLIMIT', 6)
 
 if __name__ == "__main__":
     ygmain(YieldGeneratorBasic, txfee=txfee, cjfee_a=cjfee_a,
